{"version":3,"sources":["contracts-info.js","components/Header/logo.svg","api/interface.ts","components/Home/content.ts","components/Home/index.tsx","components/Home/styles.ts","components/NewGuardian/index.tsx","components/NewGuardian/styles.ts","components/NewValidator/index.tsx","components/NewValidator/styles.ts","components/Guardrians/list.tsx","components/Guardrians/explanations.tsx","services/vote-storage.ts","components/Guardrians/index.tsx","components/Guardrians/styles.ts","components/Stakeholders/list.tsx","components/Stakeholders/dialog.tsx","components/Stakeholders/explanations.tsx","components/Stakeholders/index.tsx","components/Main/index.tsx","components/Main/style.ts","components/Header/index.tsx","components/App/theme.ts","components/ReadOnlyBanner/index.tsx","services/remote.ts","services/contracts.ts","services/metamask.ts","decorators/stub-warning.ts","services/metamask-stub.ts","api/index.ts","components/App/index.tsx","components/App/style.ts","index.tsx"],"names":["module","exports","OrbsGuardians","address","OrbsValidators","OrbsValidatorsRegistry","OrbsVoting","__webpack_require__","p","Mode","content","text","cta","label","url","withStyles","theme","mainText","paddingTop","spacing","unit","container","display","width","height","flexDirection","header","textAlign","paddingBottom","columns","column","flex","padding","columnText","margin","_ref","classes","react_default","a","createElement","className","Typography_default","variant","color","noWrap","map","passage","idx","key","Button_default","Link","to","add","marginTop","form","apiService","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","website","setWebsite","addGuardian","_ref2","asyncToGenerator","regenerator_default","mark","_callee","receipt","wrap","_context","prev","next","registerGuardian","sent","console","log","stop","apply","this","arguments","Fragment","index_es","paragraph","required","placeholder","value","onChange","ev","target","onClick","disabled","length","_useState5","_useState6","ipAddress","setIpAddress","_useState7","_useState8","orbsAddress","setOrbsAddress","addValidator","registerValidator","some","attr","readOnly","onToggle","validators","Table_default","table","TableHead_default","TableRow_default","TableCell_default","TableBody_default","data-testid","keys","concat","Checkbox_default","defaultChecked","checked","component","scope","Link_default","href","rel","explanations","hasLocalStorageAccess","window","localStorage","save","from","addresses","setItem","JSON","stringify","err","get","getItem","parse","DisabledVoteButton","Tooltip_default","title","VoteButton","onVote","voteButton","setValidators","fetchValidators","_ref3","validatorsInState","validatorsInfo","resultValidators","getValidators","Promise","all","getValidatorData","reduce","acc","currAddress","hasMetamask","getCurrentAddress","forEach","undefined","commitVote","_ref4","_callee2","stagedValidators","_context2","filter","voteOut","mode","ReadWrite","useEffect","list","assign","toggleCheck","Guardrians_VoteButton","Guardrians_DisabledVoteButton","onSelect","guardians","hover","balance","DelegateButton","onDelegate","DisabledDelegateButton","dialogState","guardian","onClose","Dialog_default","open","DialogTitle_default","DialogContent_default","DialogActions_default","dialog_DisabledDelegateButton","dialog_DelegateButton","Stakeholders_explanations","StakeholderPage","setGuardians","selectedGuardian","setSelectedGuardian","setDialogState","fetchGuardians","details","guardiansStateObject","getGuardians","getGuardianData","curr","delegate","candidate","_x","selectGuardian","Stakeholders_list","dialog","setTimeout","flexGrow","toolbar","mixins","Route","exact","path","Home","props","Stakeholders","Guardrians","components_NewGuardian","components_NewValidator","logo","nav","marginLeft","navItem","appBar","zIndex","drawer","AppBar_default","position","Toolbar_default","src","alt","createMuiTheme","palette","type","primary","main","secondary","background","default","paper","typography","useNextVariants","warning","backgroundColor","amber","Snackbar_default","anchorOrigin","vertical","horizontal","message","remoteAddress","RemoteService","classCallCheck","createClass","offset","limit","axios","params","then","res","data","validatorsRegistryContractFactory","web3","eth","Contract","validatorsRegistryAbiJson","abi","OrbsContractsInfo","guardiansContractFactory","guardiansAbiJson","votingContractFactory","votingAbiJson","MetamaskService","validatorsRegistryContract","guardiansContract","votingContract","metamaskService","Web3","ethereum","utils","toHex","split","join","enable","reject","enableMetamask","_delegate","abrupt","methods","send","_voteOut","_x2","_registerGuardian","_callee3","info","_context3","register","_x3","_registerValidator","_callee4","ipHex","_context4","ipAddressToHex","_x4","stubWarning","propertyKey","MetamaskServiceStub","_dec","_dec2","_dec3","_dec4","_dec5","_class","applyDecoratedDescriptor","prototype","getOwnPropertyDescriptor","ApiService","metamask","remote","ReadOnly","App","_this","possibleConstructorReturn","getPrototypeOf","call","BrowserRouter","basename","process","core_styles","CssBaseline_default","root","components_Header","components_Main","components_ReadOnlyBanner","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.30a35357.chunk.js","sourcesContent":["module.exports = {\n  OrbsGuardians: { address: '0x3eEAca6307B56Ff085229b2329BEE6c3c009061F' },\n  OrbsValidators: { address: '0xe96E5b2798C9fC2FEF1FB92E4d44Cc8c491194CF' },\n  OrbsValidatorsRegistry: {\n    address: '0x7AC1Ff5469c3099012CF885e686280257dF2E0c0'\n  },\n  OrbsVoting: { address: '0x1d230A72130E7a09204d3017d9BBF13552BDDe0b' }\n};\n","module.exports = __webpack_public_path__ + \"static/media/logo.bbbaa6c4.svg\";","type address = string;\ntype url = string;\n\nexport enum Mode {\n  ReadOnly,\n  ReadWrite\n}\n\nexport interface IApiStrategy {\n  mode: Mode;\n  getCurrentAddress(): Promise<address>;\n  delegate(guardianAddress: address): Promise<{}>;\n  voteOut(validatorAddresses: address[]): Promise<{}>;\n  getGuardians(): Promise<address[]>;\n  getGuardianData(address: address): Promise<{ name: string; website: url }>;\n  registerGuardian(name: string, website: url): Promise<{}>;\n  getValidators(): Promise<address[]>;\n  getValidatorData(address: address): Promise<{ name: string; website: url }>;\n  registerValidator(\n    name: string,\n    ipAddress: string,\n    website: url,\n    orbsAddress: address\n  ): Promise<{}>;\n}\n","export default [\n  {\n    text:\n      'Delegators are token holders who assign responsibility for their voting stake to Guardians, empowering them to align the network with the best interests of the ecosystem. Delegators may also proxy their voting stake to another Delegator trusting her to choose the right guardian.',\n    cta: {\n      label: 'Delegate',\n      url: '/delegator'\n    }\n  },\n  {\n    text:\n      'Guardians are expected to be key players and stakeholders within the Universe who align with the long term Orbs vision and play a role in making this vision a reality. A core role of the Guardians is to review the validators, monitor their operations and approve and elect the ideal actors.',\n    cta: {\n      label: 'Vote',\n      url: '/guardian'\n    }\n  },\n  {\n    text:\n      'Validators operate the nodes of the Orbs network. They maintain the block history and participate in block creation and validation. Validators are required to maintain availability and connectivity and provide the required quality of service. Validators are expected to be technically capable and contribute to and support the network’s development.',\n    cta: {\n      label: 'Explore',\n      url: '/'\n    }\n  }\n];\n","import React from 'react';\nimport styles from './styles';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport content from './content';\n\nconst Home = ({ classes }) => {\n  return (\n    <div className={classes.container}>\n      <header className={classes.header}>\n        <Typography variant=\"h3\" color=\"textPrimary\" noWrap>\n          Who are you?\n        </Typography>\n      </header>\n      <section className={classes.columns}>\n        {content.map((passage, idx) => (\n          <article key={idx} className={classes.column}>\n            <div className={classes.columnText}>\n              <Typography variant=\"h6\" color=\"textPrimary\">\n                {passage.text}\n              </Typography>\n            </div>\n            <Button variant=\"outlined\" color=\"secondary\">\n              <Link to={passage.cta.url}>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                  {passage.cta.label}\n                </Typography>\n              </Link>\n            </Button>\n          </article>\n        ))}\n      </section>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Home);\n","export default theme => ({\n  mainText: {\n    paddingTop: theme.spacing.unit * 10\n  },\n  container: {\n    display: 'flex',\n    width: '100%',\n    height: '80vh',\n    flexDirection: 'column' as any\n  },\n  header: {\n    textAlign: 'center' as any,\n    paddingBottom: 20\n  },\n  columns: {\n    display: 'flex',\n    height: '100%'\n  },\n  column: {\n    flex: 1,\n    padding: 20,\n    textAlign: 'center' as any\n  },\n  columnText: {\n    height: '90%',\n    width: '90%',\n    margin: '0 auto'\n  }\n});\n","import styles from './styles';\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, FormControl, TextField, Button } from '@material-ui/core';\n\nconst NewGuardian = ({ classes, apiService }) => {\n  const [name, setName] = useState('');\n  const [website, setWebsite] = useState('');\n\n  const isAddDisabled = () => !(name.length > 0 && website.length > 0);\n\n  const addGuardian = async () => {\n    const receipt = await apiService.registerGuardian({ name, website });\n    console.log(receipt);\n  };\n\n  return (\n    <>\n      <Typography paragraph variant=\"h6\" color=\"textPrimary\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus gravida\n        leo in mauris commodo pretium. Quisque varius tortor eget lorem\n        scelerisque porta. Aenean dictum lectus quis magna gravida vestibulum.\n        Integer eleifend dignissim facilisis. Nullam dapibus eleifend dolor, ac\n        lacinia nisl rhoncus id. Aenean iaculis malesuada diam, sit amet cursus\n        quam imperdiet non. Duis ullamcorper consectetur lectus a consequat.\n        Pellentesque id pulvinar velit.\n      </Typography>\n      <FormControl className={classes.form} variant=\"standard\" margin=\"normal\">\n        <TextField\n          required\n          placeholder=\"Your name\"\n          value={name}\n          onChange={ev => setName(ev.target.value)}\n          margin=\"normal\"\n          variant=\"standard\"\n        />\n        <TextField\n          required\n          placeholder=\"Your website\"\n          value={website}\n          onChange={ev => setWebsite(ev.target.value)}\n          margin=\"normal\"\n          variant=\"standard\"\n        />\n        <Button\n          className={classes.add}\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={addGuardian}\n          disabled={isAddDisabled()}\n        >\n          Add\n        </Button>\n      </FormControl>\n    </>\n  );\n};\n\nexport default withStyles(styles)(NewGuardian);\n","export default () => ({\n  add: {\n    marginTop: 20,\n    width: 80\n  },\n  form: {\n    width: 400\n  }\n});\n","import styles from './styles';\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, FormControl, TextField, Button } from '@material-ui/core';\n\nconst NewValidator = ({ classes, apiService }) => {\n  const [name, setName] = useState('');\n  const [website, setWebsite] = useState('');\n  const [ipAddress, setIpAddress] = useState('');\n  const [orbsAddress, setOrbsAddress] = useState('');\n\n  const isAddDisabled = () =>\n    [name, website, ipAddress, orbsAddress].some(attr => !attr.length);\n\n  const addValidator = async () => {\n    const receipt = await apiService.registerValidator({\n      name,\n      ipAddress,\n      website,\n      orbsAddress\n    });\n    console.log(receipt);\n  };\n\n  return (\n    <>\n      <Typography paragraph variant=\"h6\" color=\"textPrimary\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus gravida\n        leo in mauris commodo pretium. Quisque varius tortor eget lorem\n        scelerisque porta. Aenean dictum lectus quis magna gravida vestibulum.\n        Integer eleifend dignissim facilisis. Nullam dapibus eleifend dolor, ac\n        lacinia nisl rhoncus id. Aenean iaculis malesuada diam, sit amet cursus\n        quam imperdiet non. Duis ullamcorper consectetur lectus a consequat.\n        Pellentesque id pulvinar velit.\n      </Typography>\n      <FormControl className={classes.form} variant=\"standard\" margin=\"normal\">\n        <TextField\n          required\n          placeholder=\"Your name\"\n          value={name}\n          onChange={ev => setName(ev.target.value)}\n          margin=\"normal\"\n          variant=\"standard\"\n        />\n        <TextField\n          required\n          placeholder=\"Your website\"\n          value={website}\n          onChange={ev => setWebsite(ev.target.value)}\n          margin=\"normal\"\n          variant=\"standard\"\n        />\n        <TextField\n          required\n          placeholder=\"Your IP Address\"\n          value={ipAddress}\n          onChange={ev => setIpAddress(ev.target.value)}\n          margin=\"normal\"\n          variant=\"standard\"\n        />\n        <TextField\n          required\n          placeholder=\"Your Orbs Address\"\n          value={orbsAddress}\n          onChange={ev => setOrbsAddress(ev.target.value)}\n          margin=\"normal\"\n          variant=\"standard\"\n        />\n        <Button\n          className={classes.add}\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={addValidator}\n          disabled={isAddDisabled()}\n        >\n          Add\n        </Button>\n      </FormControl>\n    </>\n  );\n};\n\nexport default withStyles(styles)(NewValidator);\n","export default () => ({\n  add: {\n    marginTop: 20,\n    width: 80\n  },\n  form: {\n    width: 400\n  }\n});\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => ({});\n\nconst ValidatorsList = ({ readOnly, onToggle, validators, classes }) => {\n  return (\n    <Table className={classes.table}>\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\" />\n          <TableCell>Name</TableCell>\n          <TableCell>Address</TableCell>\n          <TableCell>Website</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody data-testid=\"validators-list\">\n        {Object.keys(validators).map(address => (\n          <TableRow data-testid={`validator-${address}`} key={address}>\n            <TableCell padding=\"checkbox\">\n              {!readOnly && (\n                <Checkbox\n                  defaultChecked={validators[address].checked}\n                  onChange={() => onToggle(address)}\n                />\n              )}\n            </TableCell>\n            <TableCell\n              component=\"th\"\n              scope=\"row\"\n              data-testid={`validator-${address}-name`}\n            >\n              {validators[address].name}\n            </TableCell>\n            <TableCell data-testid={`validator-${address}-address`}>\n              {address}\n            </TableCell>\n            <TableCell>\n              <Link\n                data-testid={`validator-${address}-url`}\n                href={validators[address].url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                color=\"secondary\"\n                variant=\"body1\"\n              >\n                {validators[address].url}\n              </Link>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default withStyles(styles)(ValidatorsList);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default () => (\n  <>\n    <Typography paragraph variant=\"h6\" color=\"textPrimary\">\n      Anyone who wishes to participate and contribute to the network’s security\n      and ideal operation may register to be a Guardian. Registration is done\n      using a smart contract on Ethereum, and enables Guardians to provide\n      identification details, such as name and website, increasing trust by\n      delegators and other stakeholders. A Guardian may update its registration\n      details at any time.\n    </Typography>\n    <Typography paragraph variant=\"h6\" color=\"textPrimary\">\n      Once registered, a Guardian may vote to elect the Validators. The vote for\n      Validators may be cast at any time and is valid for up to a week. Guardian\n      are expected to monitor the network and cast their votes accordingly, once\n      the need arises. A Guardian is considered active for an election term as\n      long as the Guardian vote is valid by the election event. The voting\n      weight of each Guardian equals the sum of the ORBS tokens balance of each\n      Delegator that delegated to them directly or hierarchically, including\n      their own, at the time of each election.\n    </Typography>\n    <Typography paragraph variant=\"h6\" color=\"textPrimary\">\n      Guardians are expected to actively monitormaintain active monitoring of\n      the Orbs network and the operation of the vValidators, and cast their\n      votes to support and promote the best interests of the network. Guardians\n      are encouraged to build a community of Delegators who empower them with\n      their voting weight, thereby increasing the Guardian’s voting impact.\n    </Typography>\n  </>\n);\n","const key = '_ORBS_VOTING_HISTORY_';\n\nconst hasLocalStorageAccess = () => {\n  return !!window.localStorage;\n};\n\nexport const save = (from, addresses: string[]): boolean => {\n  if (!hasLocalStorageAccess()) {\n    return false;\n  }\n  try {\n    window.localStorage.setItem(`${key}${from}`, JSON.stringify(addresses));\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\n\nexport const get = (from: string): string[] => {\n  if (!hasLocalStorageAccess) {\n    return [];\n  }\n  try {\n    const value = window.localStorage.getItem(`${key}${from}`);\n    if (value) {\n      return JSON.parse(value);\n    } else {\n      return [];\n    }\n  } catch (err) {\n    return [];\n  }\n};\n","import styles from './styles';\nimport ValidatorsList from './list';\nimport { Link } from 'react-router-dom';\nimport Explanations from './explanations';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Mode } from '../../api/interface';\nimport React, { useEffect, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { get, save } from '../../services/vote-storage';\n\nconst DisabledVoteButton = () => {\n  return (\n    <Tooltip title=\"Install Metamask extension to have access to voting capabilities\">\n      <div>\n        <Button\n          data-testid=\"vote-button\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          disabled={true}\n        >\n          Vote Out\n        </Button>\n      </div>\n    </Tooltip>\n  );\n};\n\nconst VoteButton = ({ onVote }) => {\n  return (\n    <Button\n      data-testid=\"vote-button\"\n      onClick={onVote}\n      variant=\"outlined\"\n      color=\"secondary\"\n    >\n      Vote Out\n    </Button>\n  );\n};\n\nconst GuardianPage = ({ classes, apiService }) => {\n  const [validators, setValidators] = useState({} as {\n    [address: string]: { checked: boolean; name: string; url: string };\n  });\n\n  const fetchValidators = async () => {\n    const validatorsInState = await apiService.getValidators();\n\n    const validatorsInfo = await Promise.all(\n      validatorsInState.map(address => apiService.getValidatorData(address))\n    );\n\n    const resultValidators = validatorsInState.reduce(\n      (acc, currAddress, idx) => {\n        acc[currAddress] = {\n          checked: false,\n          name: validatorsInfo[idx]['name'],\n          url: validatorsInfo[idx]['website']\n        };\n        return acc;\n      },\n      {}\n    );\n\n    if (hasMetamask()) {\n      const from = await apiService.getCurrentAddress();\n      const validatorsInStorage = get(from);\n\n      validatorsInStorage.forEach(address => {\n        if (resultValidators[address] !== undefined) {\n          resultValidators[address].checked = true;\n        }\n      });\n    }\n\n    setValidators(resultValidators);\n  };\n\n  const commitVote = async () => {\n    const from = await apiService.getCurrentAddress();\n    const stagedValidators = Object.keys(validators).filter(\n      address => validators[address].checked\n    );\n    const receipt = await apiService.voteOut(stagedValidators);\n    save(from, stagedValidators);\n    console.log(receipt);\n  };\n\n  const toggleCheck = (address: string) => {\n    validators[address].checked = !validators[address].checked;\n    setValidators(Object.assign({}, validators));\n  };\n\n  const hasMetamask = () => {\n    return apiService.mode === Mode.ReadWrite;\n  };\n\n  useEffect(() => {\n    fetchValidators();\n  }, []);\n\n  return (\n    <>\n      <Explanations />\n      {hasMetamask() && (\n        <Link to=\"/validator/new\">\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Join as a Validator\n          </Typography>\n        </Link>\n      )}\n      <ValidatorsList\n        readOnly={!hasMetamask()}\n        validators={validators}\n        onToggle={address => toggleCheck(address)}\n      />\n      <div className={classes.voteButton}>\n        {hasMetamask() ? (\n          <VoteButton onVote={commitVote} />\n        ) : (\n          <DisabledVoteButton />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default withStyles(styles)(GuardianPage);\n","export default () => ({\n  voteButton: {\n    textAlign: 'center' as any,\n    marginTop: 30\n  }\n});\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => ({});\n\nconst GuardiansList = ({ onSelect, guardians, classes }) => {\n  return (\n    <Table className={classes.table}>\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n          <TableCell>Address</TableCell>\n          <TableCell>Website</TableCell>\n          <TableCell>Balance</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody data-testid=\"guardians-list\">\n        {Object.keys(guardians).map(address => (\n          <TableRow\n            data-testid={`guardian-${address}`}\n            key={address}\n            hover={true}\n            onClick={() => onSelect(address)}\n          >\n            <TableCell\n              component=\"th\"\n              scope=\"row\"\n              data-testid={`guardian-${address}-name`}\n            >\n              {guardians[address].name}\n            </TableCell>\n            <TableCell data-testid={`guardian-${address}-address`}>\n              {address}\n            </TableCell>\n            <TableCell>\n              <Link\n                data-testid={`guardian-${address}-url`}\n                href={guardians[address].url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                color=\"secondary\"\n                variant=\"body1\"\n              >\n                {guardians[address].url}\n              </Link>\n            </TableCell>\n            <TableCell>{guardians[address].balance}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default withStyles(styles)(GuardiansList);\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst styles = () => ({});\n\nconst DelegateButton = ({ onDelegate }) => {\n  return (\n    <Button\n      data-testid={`delegate-button`}\n      onClick={onDelegate}\n      variant=\"outlined\"\n      color=\"secondary\"\n    >\n      Delegate\n    </Button>\n  );\n};\n\nconst DisabledDelegateButton = () => {\n  return (\n    <Tooltip title=\"Install Metamask extension to have access to voting capabilities\">\n      <div>\n        <Button\n          data-testid=\"delegate-button\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          disabled={true}\n        >\n          Delegate\n        </Button>\n      </div>\n    </Tooltip>\n  );\n};\n\nconst GuardianDialog = ({\n  readOnly,\n  dialogState,\n  guardian,\n  onClose,\n  onDelegate\n}) => {\n  return (\n    <Dialog open={dialogState} onClose={onClose}>\n      <DialogTitle>\n        <span>{guardian.name}</span>\n      </DialogTitle>\n      <DialogContent data-testid=\"guardian-dialog\">\n        <Typography variant=\"h6\" color=\"textPrimary\">\n          Information about the Guardian:\n        </Typography>\n        <ul>\n          <Typography variant=\"body1\" color=\"textPrimary\">\n            <li>\n              Url:{' '}\n              <Link\n                href={guardian.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                color=\"secondary\"\n                variant=\"body1\"\n              >\n                {guardian.url}\n              </Link>\n            </li>\n          </Typography>\n        </ul>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        {readOnly ? (\n          <DisabledDelegateButton />\n        ) : (\n          <DelegateButton onDelegate={onDelegate} />\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(GuardianDialog);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default () => (\n  <>\n    <Typography paragraph variant=\"h6\" color=\"textPrimary\">\n      Acting as a Guardian requires continuous monitoring and participation in\n      the Orbs network. Delegators Token holders may choose to participate as\n      Guardians or select a Guardian to empower with their voting weight.\n      Delegating the voting weight to an active Guardian increases the network’s\n      security by enabling the weight of the honest, silent majority to impact\n      the network. The voting weight of each Delegator is equal to the balance\n      of their ORBS tokens at the time of each election. In order to participate\n      as a Delegator, a token holder must have at least 10,000 ORBS tokens in\n      its balance at the time of the election event.\n    </Typography>\n    <Typography paragraph variant=\"h6\" color=\"textPrimary\">\n      It is important for a Delegator to select an active Guardian, as the\n      participation of the Guardian is required in order for the Delegator to\n      participate and receive rewards. Moreover, Delegators are encouraged to\n      delegate only to identified and reputable Guardians. A Delegator may trust\n      another Delegator token holder with the selection of the Guardian,\n      allowing the Guardian to receive the voting weight of the hierarchy of all\n      Delegators behind it. A delegation may be modified at any time and\n      persists unless modifiedotherwise remains as is.\n    </Typography>\n  </>\n);\n","import React, { useState, useEffect } from 'react';\nimport GuardiansList from './list';\nimport GuardianDialog from './dialog';\nimport { Link } from 'react-router-dom';\nimport Explanations from './explanations';\nimport { Mode } from '../../api/interface';\nimport Typography from '@material-ui/core/Typography';\n\nconst StakeholderPage = ({ apiService }) => {\n  const [guardians, setGuardians] = useState({} as {\n    [address: string]: { name: string; url: string };\n  });\n  const [selectedGuardian, setSelectedGuardian] = useState('');\n  const [dialogState, setDialogState] = useState(false);\n\n  const fetchGuardians = async () => {\n    const addresses = await apiService.getGuardians();\n    const details = await Promise.all(\n      addresses.map(address => apiService.getGuardianData(address))\n    );\n\n    const guardiansStateObject = addresses.reduce((acc, curr, idx) => {\n      acc[curr] = {\n        name: details[idx]['name'],\n        url: details[idx]['website'],\n        balance: details[idx]['balance']\n      };\n      return acc;\n    }, {});\n    setGuardians(guardiansStateObject);\n  };\n\n  useEffect(() => {\n    fetchGuardians();\n  }, []);\n\n  const delegate = async candidate => {\n    const receipt = await apiService.delegate(candidate);\n    console.log(receipt);\n  };\n\n  const delegateHandler = () => {\n    delegate(selectedGuardian);\n    setTimeout(() => {\n      setDialogState(false);\n    }, 100);\n  };\n\n  const selectGuardian = address => {\n    setSelectedGuardian(address);\n    setDialogState(true);\n  };\n\n  const hasMetamask = () => {\n    return apiService.mode === Mode.ReadWrite;\n  };\n\n  return (\n    <>\n      <Explanations />\n\n      {hasMetamask() && (\n        <Link to=\"/guardian/new\">\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Join as a Guardian\n          </Typography>\n        </Link>\n      )}\n\n      <GuardiansList guardians={guardians} onSelect={selectGuardian} />\n      <GuardianDialog\n        readOnly={!hasMetamask()}\n        dialogState={dialogState}\n        guardian={Object.assign(\n          { address: selectGuardian },\n          guardians[selectedGuardian]\n        )}\n        onClose={() => setDialogState(false)}\n        onDelegate={delegateHandler}\n      />\n    </>\n  );\n};\n\nexport default StakeholderPage;\n","import React from 'react';\nimport Home from '../Home';\nimport NewGuardian from '../NewGuardian';\nimport NewValidator from '../NewValidator';\nimport GuardianPage from '../Guardrians';\nimport StakeholderPage from '../Stakeholders';\nimport { Route, RouteProps } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './style';\n\nconst Main = ({ apiService, classes }) => {\n  return (\n    <main className={classes.content} data-testid=\"main\">\n      <div className={classes.toolbar} />\n      <Route exact path=\"/\" component={Home} />\n      <Route\n        exact\n        path=\"/delegator\"\n        component={(props: RouteProps) => (\n          <StakeholderPage {...props} apiService={apiService} />\n        )}\n      />\n      <Route\n        exact\n        path=\"/guardian\"\n        component={(props: RouteProps) => (\n          <GuardianPage {...props} apiService={apiService} />\n        )}\n      />\n      <Route\n        exact\n        path=\"/guardian/new\"\n        component={(props: RouteProps) => (\n          <NewGuardian {...props} apiService={apiService} />\n        )}\n      />\n      <Route\n        exact\n        path=\"/validator/new\"\n        component={(props: RouteProps) => (\n          <NewValidator {...props} apiService={apiService} />\n        )}\n      />\n    </main>\n  );\n};\n\nexport default withStyles(styles)(Main);\n","export default theme => ({\n  content: {\n    flexGrow: 1,\n    padding: `${theme.spacing.unit * 5}px`,\n    width: '100%'\n  },\n  toolbar: theme.mixins.toolbar\n});\n","import React from 'react';\nimport logo from './logo.svg';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  logo: {\n    width: 140\n  },\n  nav: {\n    marginLeft: 30,\n    display: 'inherit'\n  },\n  navItem: {\n    padding: '0 13px'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    padding: 8\n  }\n});\n\nconst Header = ({ classes }) => {\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar} data-testid=\"header\">\n      <Toolbar>\n        <Link to=\"/\">\n          <img className={classes.logo} src={logo} alt=\"Orbs\" />\n        </Link>\n        <nav className={classes.nav}>\n          <Link to=\"/delegator\" className={classes.navItem}>\n            <Typography variant=\"h6\" color=\"secondary\" noWrap>\n              DELEGATORS\n            </Typography>\n          </Link>\n          <Link to=\"/guardian\" className={classes.navItem}>\n            <Typography variant=\"h6\" color=\"secondary\" noWrap>\n              GUARDIANS\n            </Typography>\n          </Link>\n          <Link to=\"/\" className={classes.navItem}>\n            <Typography variant=\"h6\" color=\"secondary\" noWrap>\n              VALIDATORS\n            </Typography>\n          </Link>\n        </nav>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default withStyles(styles)(Header);\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport default createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#09142c' },\n    secondary: { main: '#74f6fd' },\n    background: {\n      default: '#0a0f25',\n      paper: '#192a45'\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { SnackbarContent } from '@material-ui/core';\nimport amber from '@material-ui/core/colors/amber';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => ({\n  warning: {\n    backgroundColor: amber[700]\n  }\n});\n\nconst ReadOnlyBanner = ({ classes }) => {\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right'\n      }}\n      open={true}\n    >\n      <SnackbarContent\n        data-testid=\"read-only-banner\"\n        className={classes.warning}\n        message=\"Attention! You are in Read Only mode.\"\n      />\n    </Snackbar>\n  );\n};\n\nexport default withStyles(styles)(ReadOnlyBanner);\n","import axios from 'axios';\n\nconst remoteAddress = 'https://orbs-voting-proxy-server.herokuapp.com/api';\n\nexport class RemoteService {\n  getGuardians(offset: number, limit: number) {\n    return axios\n      .get(`${remoteAddress}/guardians`, {\n        params: { limit, offset }\n      })\n      .then(res => res.data);\n  }\n  getGuardianData(address: string) {\n    return axios\n      .get(`${remoteAddress}/guardians/${address}`)\n      .then(res => res.data);\n  }\n  getValidators() {\n    return axios.get(`${remoteAddress}/validators`).then(res => res.data);\n  }\n  getValidatorData(address: string) {\n    return axios\n      .get(`${remoteAddress}/validators/${address}`)\n      .then(res => res.data);\n  }\n}\n","import * as OrbsContractsInfo from '../contracts-info';\nimport votingAbiJson from '../contracts/OrbsVoting.json';\nimport guardiansAbiJson from '../contracts/OrbsGuardians.json';\nimport validatorsAbiJson from '../contracts/OrbsValidators.json';\nimport validatorsRegistryAbiJson from '../contracts/OrbsValidatorsRegistry.json';\n\nexport const validatorsContractFactory = web3 => {\n  return new web3.eth.Contract(\n    validatorsAbiJson.abi as any,\n    window['__OrbsContractsInfo__']\n      ? window['__OrbsContractsInfo__']['OrbsValidators']['address']\n      : OrbsContractsInfo.OrbsValidators.address\n  );\n};\n\nexport const validatorsRegistryContractFactory = web3 => {\n  return new web3.eth.Contract(\n    validatorsRegistryAbiJson.abi as any,\n    window['__OrbsContractsInfo__']\n      ? window['__OrbsContractsInfo__']['OrbsValidatorsRegistry']['address']\n      : OrbsContractsInfo.OrbsValidatorsRegistry.address\n  );\n};\n\nexport const guardiansContractFactory = web3 => {\n  return new web3.eth.Contract(\n    guardiansAbiJson.abi as any,\n    window['__OrbsContractsInfo__']\n      ? window['__OrbsContractsInfo__']['OrbsGuardians']['address']\n      : OrbsContractsInfo.OrbsGuardians.address\n  );\n};\n\nexport const votingContractFactory = web3 => {\n  return new web3.eth.Contract(\n    votingAbiJson.abi as any,\n    window['__OrbsContractsInfo__']\n      ? window['__OrbsContractsInfo__']['OrbsVoting']['address']\n      : OrbsContractsInfo.OrbsVoting.address\n  );\n};\n","import Web3 from 'web3';\nimport {\n  guardiansContractFactory,\n  votingContractFactory,\n  validatorsRegistryContractFactory\n} from './contracts';\n\nexport class MetamaskService {\n  private web3: Web3;\n  private validatorsRegistryContract;\n  private guardiansContract;\n  private votingContract;\n  private metamaskService;\n\n  constructor() {\n    this.web3 = new Web3(ethereum as any);\n    this.validatorsRegistryContract = validatorsRegistryContractFactory(\n      this.web3\n    );\n    this.guardiansContract = guardiansContractFactory(this.web3);\n    this.votingContract = votingContractFactory(this.web3);\n  }\n\n  private ipAddressToHex(address: string) {\n    return this.web3.utils.toHex(address.split('.').join(''));\n  }\n\n  private enableMetamask(): Promise<string> {\n    return ethereum\n      .enable()\n      .then(\n        (addresses: string[]) => addresses[0],\n        (err: any) => Promise.reject(err)\n      );\n  }\n\n  getCurrentAddress() {\n    return this.enableMetamask();\n  }\n\n  async delegate(candidate: string) {\n    const from = await this.metamaskService.enable();\n    return this.votingContract.methods.delegate(candidate).send({ from });\n  }\n\n  async voteOut(validators: string[]) {\n    const from = await this.metamaskService.enable();\n    return this.votingContract.methods.voteOut(validators).send({ from });\n  }\n\n  async registerGuardian(info) {\n    const { name, website } = info;\n    const from = await this.metamaskService.enable();\n    return this.guardiansContract.methods\n      .register(name, website)\n      .send({ from });\n  }\n\n  async registerValidator(info) {\n    const { name, ipAddress, website, orbsAddress } = info;\n    const from = await this.metamaskService.enable();\n    const ipHex = this.ipAddressToHex(ipAddress);\n    return this.validatorsRegistryContract.methods\n      .register(name, ipHex, website, orbsAddress)\n      .send({ from });\n  }\n}\n","export const stubWarning = () => {\n  return function(target: any, propertyKey: string) {\n    console.log(`${propertyKey} is not available in read-only mode`);\n  };\n};\n","import { stubWarning } from '../decorators/stub-warning';\n\nexport class MetamaskServiceStub {\n  @stubWarning()\n  getCurrentAddress() {\n    return '';\n  }\n\n  @stubWarning()\n  delegate() {\n    return Promise.reject();\n  }\n\n  @stubWarning()\n  voteOut() {\n    return Promise.reject();\n  }\n\n  @stubWarning()\n  registerGuardian() {\n    return Promise.reject();\n  }\n\n  @stubWarning()\n  registerValidator() {\n    return Promise.reject();\n  }\n}\n","import { IApiStrategy, Mode } from './interface';\nimport { RemoteService } from '../services/remote';\nimport { MetamaskService } from '../services/metamask';\nimport { MetamaskServiceStub } from '../services/metamask-stub';\n\nexport class ApiService implements IApiStrategy {\n  private metamask;\n  private remote;\n  mode: Mode;\n\n  constructor() {\n    this.mode = window['ethereum'] ? Mode.ReadWrite : Mode.ReadOnly;\n    this.remote = new RemoteService();\n    this.metamask =\n      this.mode === Mode.ReadWrite\n        ? new MetamaskService()\n        : new MetamaskServiceStub();\n  }\n\n  getCurrentAddress() {\n    return this.metamask.getCurrentAddress();\n  }\n  delegate(address: string) {\n    return this.metamask.delegate(address);\n  }\n  voteOut(addresses: string[]) {\n    return this.metamask.voteOut(addresses);\n  }\n  getGuardians() {\n    return this.remote.getGuardians(0, 100);\n  }\n  getGuardianData(address: string) {\n    return this.remote.getGuardianData(address);\n  }\n  registerGuardian(info) {\n    return this.metamask.registerGuardian(info);\n  }\n  getValidators() {\n    return this.remote.getValidators();\n  }\n  getValidatorData(address: string) {\n    return this.remote.getValidatorData(address);\n  }\n  registerValidator(info) {\n    return this.metamask.registerValidator(info);\n  }\n}\n","import Main from '../Main';\nimport Header from '../Header';\nimport React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {\n  MuiThemeProvider,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/styles';\nimport theme from './theme';\nimport styles from './style';\nimport ReadOnlyBanner from '../ReadOnlyBanner';\nimport { ApiService } from '../../api';\nimport { Mode } from '../../api/interface';\n\nclass App extends Component<WithStyles> {\n  apiService: ApiService;\n  constructor(props) {\n    super(props);\n    this.apiService = new ApiService();\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <div className={classes.root} data-testid=\"container\">\n            <Header />\n            <Main apiService={this.apiService} />\n            {this.apiService.mode === Mode.ReadOnly ? <ReadOnlyBanner /> : null}\n          </div>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","export default () => ({\n  root: {\n    display: 'flex'\n  }\n});\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}