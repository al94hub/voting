{"version":3,"sources":["pages/Home/index.tsx","pages/Guardrians/index.tsx","pages/Stakeholders/index.tsx","services/contracts.ts","consts.ts","services/metamask.ts","components/App/App.tsx","index.tsx"],"names":["Home","react_default","a","createElement","GuardianPage","_ref","validatorsContract","metamaskService","_useState","useState","_useState2","Object","slicedToArray","validators","setValidators","_useState3","_useState4","candidateValidator","setCandidateValidator","from","getCurrentAddress","useEffect","methods","getValidators","call","then","map","validator","key","type","placeholder","value","onChange","ev","target","onClick","addValidator","send","Stakeholders","web3","Web3","ethereum","validatorsContractFactory","eth","Contract","validatorsAbiJson","abi","MetamaskService","enable","addresses","err","Promise","reject","selectedAddress","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","state","_this2","BrowserRouter","basename","process","Link","to","Route","exact","path","component","Guardrians","assign","Component","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"uslFAMeA,UAJF,WACX,OAAOC,EAAAC,EAAAC,cAAA,+CC4CMC,EA7CM,SAAAC,GAA6C,IAA1CC,EAA0CD,EAA1CC,mBAAoBC,EAAsBF,EAAtBE,gBAAsBC,EAC5BC,mBAAS,IADmBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACzDK,EADyDH,EAAA,GAC7CI,EAD6CJ,EAAA,GAAAK,EAEZN,mBAAS,IAFGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEzDE,EAFyDD,EAAA,GAErCE,EAFqCF,EAAA,GAI1DG,EAAOZ,EAAgBa,oBAoB7B,OAJAC,oBAAU,WAbRf,EAAmBgB,QAChBC,gBACAC,KAAK,CAAEL,SACPM,KAAKX,KAeRb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BAAqBgB,GACrBlB,EAAAC,EAAAC,cAAA,UACGU,EAAWa,IAAI,SAAAC,GAAS,OACvB1B,EAAAC,EAAAC,cAAA,MAAIyB,IAAKD,GAAYA,MAGzB1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACE0B,KAAK,OACLC,YAAY,0BACZC,MAAOd,EACPe,SAAU,SAAAC,GAAE,OAAIf,EAAsBe,EAAGC,OAAOH,UAElD9B,EAAAC,EAAAC,cAAA,UAAQgC,QA1BO,WACnB7B,EAAmBgB,QAChBc,aAAanB,GACboB,KAAK,CAAElB,SACPM,KAAK,kBAAMP,EAAsB,QAsBhC,UCnCOoB,EAJM,WACnB,OAAOrC,EAAAC,EAAAC,cAAA,uFCCHoC,EAAO,IAAIC,IAAKC,UAETC,EAA4B,WACvC,OAAO,IAAIH,EAAKI,IAAIC,SAClBC,EAAkBC,ICPpB,+CCDmBC,mGAEjB,OAAON,SACJO,SACAvB,KACC,SAACwB,GAAD,OAAyBA,EAAU,IACnC,SAACC,GAAD,OAAcC,QAAQC,OAAOF,iDAIjC,OAAOT,SAASY,yBC2DLC,cAjDb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA7C,OAAA8C,EAAA,EAAA9C,CAAA+C,KAAAJ,IACjBE,EAAA7C,OAAAgD,EAAA,EAAAhD,CAAA+C,KAAA/C,OAAAiD,EAAA,EAAAjD,CAAA2C,GAAA9B,KAAAkC,KAAMH,KACDM,MAAQ,CACXvD,mBAAoBoC,IACpBnC,gBAAiB,IAAIwC,GAJNS,mFAQjBE,KAAKG,MAAMtD,gBAAgByC,0CAEpB,IAAAc,EAAAJ,KACP,OACEzD,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAQC,SAAUC,WAChBhE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEFlE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,GAAG,gBAAT,gBAEFlE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,GAAG,aAAT,eAINlE,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvE,IACjCC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWjC,IACtCrC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACEE,KAAK,YACLC,UAAW,SAAChB,GAAD,OACTtD,EAAAC,EAAAC,cAACqE,EAAD7D,OAAA8D,OAAA,GACMlB,EADN,CAEEjD,mBAAoBwD,EAAKD,MAAMvD,mBAC/BC,gBAAiBuD,EAAKD,MAAMtD,uBAKpCN,EAAAC,EAAAC,cAAA,wBA3CQuE,aCdlBC,IAASC,OAAO3E,EAAAC,EAAAC,cAAC0E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b1d34e82.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n  return <h2>Welcome to Orbs Voting</h2>;\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\n\nconst GuardianPage = ({ validatorsContract, metamaskService }) => {\n  const [validators, setValidators] = useState([]);\n  const [candidateValidator, setCandidateValidator] = useState('');\n\n  const from = metamaskService.getCurrentAddress();\n\n  const fetchValidators = () => {\n    validatorsContract.methods\n      .getValidators()\n      .call({ from })\n      .then(setValidators);\n  };\n\n  const addValidator = () => {\n    validatorsContract.methods\n      .addValidator(candidateValidator)\n      .send({ from })\n      .then(() => setCandidateValidator(''));\n  };\n\n  useEffect(() => {\n    fetchValidators();\n  });\n\n  return (\n    <div>\n      <h3>Hello Guardian, {from}</h3>\n      <ul>\n        {validators.map(validator => (\n          <li key={validator}>{validator}</li>\n        ))}\n      </ul>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter validator address\"\n          value={candidateValidator}\n          onChange={ev => setCandidateValidator(ev.target.value)}\n        />\n        <button onClick={addValidator}>Add</button>\n      </div>\n    </div>\n  );\n};\n\nexport default GuardianPage;\n","import React from 'react';\n\nconst Stakeholders = () => {\n  return <h3>Hello Stakeholder,</h3>;\n};\n\nexport default Stakeholders;\n","import Web3 from 'web3';\nimport { validatorsContractAddress } from '../consts';\nimport validatorsAbiJson from '../contracts/OrbsValidators.json';\n\nconst web3 = new Web3(ethereum as any);\n\nexport const validatorsContractFactory = () => {\n  return new web3.eth.Contract(\n    validatorsAbiJson.abi as any,\n    validatorsContractAddress\n  );\n};\n","export const validatorsContractAddress =\n  '0xD3a92e0341307432FC6cD388F345a81adc992cC5';\nexport const votingContractAddress = '';\n","export default class MetamaskService {\n  enable() {\n    return ethereum\n      .enable()\n      .then(\n        (addresses: string[]) => addresses[0],\n        (err: any) => Promise.reject(err)\n      );\n  }\n  getCurrentAddress() {\n    return ethereum.selectedAddress;\n  }\n}\n","import './App.css';\nimport Home from '../../pages/Home';\nimport React, { Component } from 'react';\nimport GuardianPage from '../../pages/Guardrians';\nimport Stakeholders from '../../pages/Stakeholders';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  RouteProps\n} from 'react-router-dom';\nimport { validatorsContractFactory } from '../../services/contracts';\nimport MetamaskService from '../../services/metamask';\n\ninterface IState {\n  validatorsContract: Object;\n  metamaskService: MetamaskService;\n}\n\nclass App extends Component<{}, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validatorsContract: validatorsContractFactory(),\n      metamaskService: new MetamaskService()\n    };\n  }\n  componentDidMount() {\n    this.state.metamaskService.enable();\n  }\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <header />\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/stakeholder\">Stakeholder</Link>\n              </li>\n              <li>\n                <Link to=\"/guardian\">Guardian</Link>\n              </li>\n            </ul>\n          </nav>\n          <main>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/stakeholder\" component={Stakeholders} />\n            <Route\n              path=\"/guardian\"\n              component={(props: RouteProps) => (\n                <GuardianPage\n                  {...props}\n                  validatorsContract={this.state.validatorsContract}\n                  metamaskService={this.state.metamaskService}\n                />\n              )}\n            />\n          </main>\n          <footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}